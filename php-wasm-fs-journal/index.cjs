"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const l=require("@php-wasm/universal"),u=require("@php-wasm/util"),f=require("@php-wasm/logger");function T(t,n,e=()=>{}){function o(){n=b(n);const i=t[l.__private__dont__use].FS,s=m(i,a=>{if(a.path.startsWith(n))e(a);else if(a.operation==="RENAME"&&a.toPath.startsWith(n))for(const d of E(t,a.path,a.toPath))e(d)}),c={};for(const[a]of Object.entries(s))c[a]=i[a];function p(){for(const[a,d]of Object.entries(s))i[a]=function(..._){return d(..._),c[a].apply(this,_)}}function y(){for(const[a,d]of Object.entries(c))t[l.__private__dont__use].FS[a]=d}t[l.__private__dont__use].journal={bind:p,unbind:y},p()}t.addEventListener("runtime.initialized",o),t[l.__private__dont__use]&&o();function r(){t[l.__private__dont__use].journal.unbind(),delete t[l.__private__dont__use].journal}return t.addEventListener("runtime.beforedestroy",r),function(){return t.removeEventListener("runtime.initialized",o),t.removeEventListener("runtime.beforedestroy",r),t[l.__private__dont__use].journal.unbind()}}const m=(t,n=()=>{})=>({write(e){n({operation:"WRITE",path:e.path,nodeType:"file"})},truncate(e){let o;typeof e=="string"?o=t.lookupPath(e,{follow:!0}).node:o=e,n({operation:"WRITE",path:t.getPath(o),nodeType:"file"})},unlink(e){n({operation:"DELETE",path:e,nodeType:"file"})},mknod(e,o){t.isFile(o)&&n({operation:"CREATE",path:e,nodeType:"file"})},mkdir(e){n({operation:"CREATE",path:e,nodeType:"directory"})},rmdir(e){n({operation:"DELETE",path:e,nodeType:"directory"})},rename(e,o){try{const r=t.lookupPath(e,{follow:!0}),i=t.lookupPath(o,{parent:!0}).path;n({operation:"RENAME",nodeType:t.isDir(r.node.mode)?"directory":"file",path:r.path,toPath:u.joinPaths(i,u.basename(o))})}catch{}}});function R(t,n){t[l.__private__dont__use].journal.unbind();try{for(const e of n)e.operation==="CREATE"?e.nodeType==="file"?t.writeFile(e.path," "):t.mkdir(e.path):e.operation==="DELETE"?e.nodeType==="file"?t.unlink(e.path):t.rmdir(e.path):e.operation==="WRITE"?t.writeFile(e.path,e.data):e.operation==="RENAME"&&t.mv(e.path,e.toPath)}finally{t[l.__private__dont__use].journal.bind()}}function*E(t,n,e){if(t.isDir(n)){yield{operation:"CREATE",path:e,nodeType:"directory"};for(const o of t.listFiles(n))yield*E(t,u.joinPaths(n,o),u.joinPaths(e,o))}else yield{operation:"CREATE",path:e,nodeType:"file"},yield{operation:"WRITE",nodeType:"file",path:e}}function b(t){return t.replace(/\/$/,"").replace(/\/\/+/g,"/")}function h(t){const n={};for(let e=t.length-1;e>=0;e--){for(let o=e-1;o>=0;o--){const r=g(t[e],t[o]);if(r==="none")continue;const i=t[e],s=t[o];if(i.operation==="RENAME"&&s.operation==="RENAME"){f.logger.warn("[FS Journal] Normalizing a double rename is not yet supported:",{current:i,last:s});continue}(s.operation==="CREATE"||s.operation==="WRITE")&&(i.operation==="RENAME"?r==="same_node"?(n[o]=[],n[e]=[{...s,path:i.toPath},...n[e]||[]]):r==="descendant"&&(n[o]=[],n[e]=[{...s,path:u.joinPaths(i.toPath,s.path.substring(i.path.length))},...n[e]||[]]):i.operation==="WRITE"&&r==="same_node"?n[o]=[]:i.operation==="DELETE"&&r==="same_node"&&(n[o]=[],n[e]=[]))}if(Object.entries(n).length>0){const o=t.flatMap((r,i)=>i in n?n[i]:[r]);return h(o)}}return t}function g(t,n){const e=t.path,o=t.operation!=="WRITE"&&t.nodeType==="directory",r=n.operation!=="WRITE"&&n.nodeType==="directory",i=n.operation==="RENAME"?n.toPath:n.path;return i===e?"same_node":r&&e.startsWith(i+"/")?"ancestor":o&&i.startsWith(e+"/")?"descendant":"none"}async function v(t,n){const o=n.filter(r=>r.operation==="WRITE").map(r=>P(t,r));return await Promise.all(o),n}const F=new u.Semaphore({concurrency:15});async function P(t,n){const e=await F.acquire();try{n.data=await t.readFileAsBuffer(n.path)}catch(o){f.logger.warn(`Journal failed to hydrate a file on flush: the path ${n.path} no longer exists`),f.logger.error(o)}e()}exports.hydrateUpdateFileOps=v;exports.journalFSEvents=T;exports.normalizeFilesystemOperations=h;exports.replayFSJournal=R;
//# sourceMappingURL=index.cjs.map
